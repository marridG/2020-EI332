/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 2.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 5.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("resetn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("inst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("inst[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("inst[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "inst";
}

SIGNAL("aluout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("aluout[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("aluout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "aluout";
}

SIGNAL("memout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("memout[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("memout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "memout";
}

SIGNAL("mem_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("imem_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dmem_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[6][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[6]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[5][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[5]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[4][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[4]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[3][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[3]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[2]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[1]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[7][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[7]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[8][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[8]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[9][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[9]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

SIGNAL("sc_cpu:cpu|regfile:rf|register[10][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sc_cpu:cpu|regfile:rf|register[10]";
}

TRANSITION_LIST("resetn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1960.0;
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("pc[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("pc[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("inst[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("aluout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("memout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("mem_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 199;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("imem_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("dmem_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[6][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[5][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[4][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[3][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[7][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[8][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[9][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

TRANSITION_LIST("sc_cpu:cpu|regfile:rf|register[10][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 2000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "resetn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mem_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "imem_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dmem_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "pc[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "pc[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "inst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "inst[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "inst[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "aluout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "aluout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "memout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
	CHILDREN = 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136;
}

DISPLAY_LINE
{
	CHANNEL = "memout[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "memout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
	CHILDREN = 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 0;
	CHILDREN = 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 0;
	CHILDREN = 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[3][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 0;
	CHILDREN = 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 241;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 242;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 243;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 244;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 245;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 246;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 247;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 248;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 249;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 250;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 251;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 252;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 253;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 254;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 255;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 259;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 260;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 261;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 262;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 263;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 264;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 265;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 266;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 267;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[4][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 268;
	TREE_LEVEL = 1;
	PARENT = 236;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 269;
	TREE_LEVEL = 0;
	CHILDREN = 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 270;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 271;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 272;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 273;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 274;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 275;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 276;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 277;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 278;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 279;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 280;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 281;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 282;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 283;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 284;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 285;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 286;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 287;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 288;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 289;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 290;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 291;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 292;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 293;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 294;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 295;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 296;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 297;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 298;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 299;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 300;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[5][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 301;
	TREE_LEVEL = 1;
	PARENT = 269;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 302;
	TREE_LEVEL = 0;
	CHILDREN = 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 303;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 304;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 305;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 306;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 307;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 308;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 309;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 310;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 311;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 312;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 313;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 314;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 315;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 316;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 317;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 318;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 319;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 320;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 321;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 322;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 323;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 324;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 325;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 326;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 327;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 328;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 329;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 330;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 331;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 332;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 333;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[6][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 334;
	TREE_LEVEL = 1;
	PARENT = 302;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 335;
	TREE_LEVEL = 0;
	CHILDREN = 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 336;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 337;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 338;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 339;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 340;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 341;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 342;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 343;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 344;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 345;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 346;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 347;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 348;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 349;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 350;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 351;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 352;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 353;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 354;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 355;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 356;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 357;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 358;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 359;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 360;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 361;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 362;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 363;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 364;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 365;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 366;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[7][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 367;
	TREE_LEVEL = 1;
	PARENT = 335;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 368;
	TREE_LEVEL = 0;
	CHILDREN = 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 369;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 370;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 371;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 372;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 373;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 374;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 375;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 376;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 377;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 378;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 379;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 380;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 381;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 382;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 383;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 384;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 385;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 386;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 387;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 388;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 389;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 390;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 391;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 392;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 393;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 394;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 395;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 396;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 397;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 398;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 399;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[8][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 400;
	TREE_LEVEL = 1;
	PARENT = 368;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 401;
	TREE_LEVEL = 0;
	CHILDREN = 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 402;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 403;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 404;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 405;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 406;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 407;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 408;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 409;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 410;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 411;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 412;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 413;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 414;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 415;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 416;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 417;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 418;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 419;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 420;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 421;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 422;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 423;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 424;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 425;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 426;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 427;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 428;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 429;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 430;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 431;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 432;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[9][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 433;
	TREE_LEVEL = 1;
	PARENT = 401;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 434;
	TREE_LEVEL = 0;
	CHILDREN = 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 435;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 436;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 437;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 438;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 439;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 440;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 441;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 442;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 443;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 444;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 445;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 446;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 447;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 448;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 449;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 450;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 451;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 452;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 453;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 454;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 455;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 456;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 457;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 458;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 459;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 460;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 461;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 462;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 463;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 464;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 465;
	TREE_LEVEL = 1;
	PARENT = 434;
}

DISPLAY_LINE
{
	CHANNEL = "sc_cpu:cpu|regfile:rf|register[10][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 466;
	TREE_LEVEL = 1;
	PARENT = 434;
}

TIME_BAR
{
	TIME = 62600;
	MASTER = TRUE;
}
;
